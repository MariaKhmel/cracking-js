{"mappings":"AAGA,MAAMA,EAAc,KAChB,IAAIC,EAAiB,EAiBrB,MAAO,C,gBAfiB,IACbA,E,cAGW,KAClBA,GAAiB,EACVA,G,cAGW,KAClBA,GAAkC,EAC3BA,GAI6C,EAG3CD,IACAA,KAajB,YAAiBE,GACbC,QAAQC,IAAI,QAASC,MACrBF,QAAQC,IAAI,QAASF,E,GAIHI,KAAK,CAAEC,KAAM,OAAS,OAAQ,SAApD,MAaMC,EAAW,CAACC,EAAMC,KACpBP,QAAQC,IAAI,OAAQK,GACpBN,QAAQC,IAAI,OAAQM,GACbD,EAAOC,GAWZC,GANYH,EAASF,KAAK,KAAM,GAMd,CAACG,EAAMC,IAGF,IAArBE,UAAUC,OACHJ,EAAOC,EAGVI,GAASH,EAAgBF,EAAKK,IAI3BH,EAAgB,EAAhBA,CAAmB,EAAnBA,IAsDfI,iBACW,IAAIC,SAAQ,CAACC,EAASC,IAClBC,MAAM,0DACdC,OAAMC,GAAGH,OAAOG,I,CAKvBC","sources":["src/index.js"],"sourcesContent":["\n\n\nconst makeCounter = () => {\n    let currentCounter = 0;\n    \n    const getCurrentCount = () => {\n        return currentCounter;\n    }\n\n    const increaseCount = () => {\n        currentCounter +=1;\n        return currentCounter;\n    }\n\n    const decreaseCount = () => {\n        currentCounter = currentCounter - 1;\n        return currentCounter;\n    }\n\n    \n    return { getCurrentCount, increaseCount, decreaseCount };\n}\n\nconst counter1 = makeCounter();\nconst counter2 = makeCounter();\n\n\n// console.log(counter1.getCurrentCount());\n// console.log(counter1.increaseCount());\n// console.log(counter1.decreaseCount());\n// console.log(counter1.getCurrentCount());\n// console.log(counter2.increaseCount());\n// console.log(counter2.increaseCount());\n// console.log(counter2.increaseCount());\n// console.log(counter1.getCurrentCount());\n\n\nfunction show(...args) {\n    console.log('this:', this);\n    console.log('args:', args);\n}\n\n// show.apply({ name: 'Bob' }, ['here', 'there'])\nconst showThis = show.bind({ name: 'Bob' }, 'here', 'there')\n// showThis()\n\n// const lowerCase = s => s.toLowercase();\n// const addSymbol = s => `${s}`;\n// const reverseString = s => s.split('').reverse().join('');\n\n// const compose = (...allFunctions) => arg => {\n//     return allFunctions.reduce((prevFunc, currentFunc) => currentFunc(prevFunc), arg);\n// }\n// const procesString = compose(lowerCase, addSymbol, reverseString);\n// procesString('acvfds')\n\nconst multiply = (num1, num2) => {\n    console.log('num1', num1);\n    console.log('num2', num2);\n    return num1 * num2\n};\nconst multiply5 = num2 => {\n    return multiply(5, num2)\n};\nconst multiply4 = multiply.bind(null, 4)\n\n// console.log(multiply5(2));\n// console.log((multiply4(3)));\n\n\nconst multiplyCurried = (num1, num2) => {\n    // console.log(num1);\n    // console.log(num2);\n    if (arguments.length === 2) {\n        return num1 * num2;\n    }\n\n    return (num3) => multiplyCurried(num1,num3);\n}\n\n\nconst result = multiplyCurried(3)(5)();\n// console.log(result);\n\nconst cat = [1, 3, 'dog', 'Poly'];\nconst isDog = el => el === 'dog';\n\n// console.log(cat.indexOf(3));\n// console.log(cat.findIndex(el=>el===3));\n\n// const students = [\n//     { id: 1, name: 'Alice', age: 22 },\n//     { id: 2, name: 'Bob', age: 25 },\n//     { id: 3, name: 'Charlie', age: 20 }\n// ];\n\n// const namesArray = students.reduce((newStudentsList, element, index, array) => {\n//     return [...newStudentsList, element.name ] \n// }, [])\n\n// console.log(namesArray);\n\n// const totalAge = students.reduce((totalNumber, element, index, array )=> {\n//     totalNumber += element.age;\n//     return totalNumber;\n// }, 0);\n\n// console.log(totalAge);\n\n// const newArray = students.reduce((newStudentsArray, element, index) => {\n//     newStudentsArray[element.name] = element;\n//     return newStudentsArray;\n    \n// }, {})\n\n// console.log(newArray);\n\nconst note = {};\nnote.name = 'ppp';\n// console.log(note);\n\nconst students = [\n    { id: 1, name: 'Alice', age: 22 },\n    { id: 2, name: 'Bob', age: 25 },\n    { id: 3, name: 'Charlie', age: 20 }\n];\n\n// students.sort((a, b) => a.age - b.age);\n\n// students.sort((a, b) => b.name.localeCompare(a.name))\n\n// const newS = students.slice(0,1)\n// console.log(newS);\n\n\nasync function fetchPokemonByID() {\n    return new Promise((resolve, reject) => {\n        return fetch('https://pokeapi.co/api/v2/item/1/?limit=10&offset=10');\n    }).catch(e=>reject(e))\n    }\n   \n        \n\nfetchPokemonByID()\n\nasync function newFestch() {\n    for (let i = 0; i <= 10; i += 1){\n        \n    }\n}\n\n// console.log(Array.from('Bob'));\n\n// console.log([].map.call('somesting', (letter) => letter));\n\nconst multiplyN = (num1, num2) => {\n    if (num2) {\n        return num1 * num2;\n    }\n    \n    return (num3) => num1 * num3;\n\n}\n\n// console.log(multiplyN(2, 3));\n// console.log(multiplyN(2)(5));\n// const someFunc = multiplyN(2);\n// console.log(someFunc(4));"],"names":["$1f0dc3b9307be026$var$makeCounter","currentCounter","args","console","log","this","bind","name","$1f0dc3b9307be026$var$multiply","num1","num2","$1f0dc3b9307be026$var$multiplyCurried","arguments","length","num3","async","Promise","resolve","reject","fetch","catch","e","$1f0dc3b9307be026$var$fetchPokemonByID"],"version":3,"file":"index.14624a7f.js.map"}