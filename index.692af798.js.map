{"mappings":"YA0KA,IACUA,EACAC,EAGVC,QAAQC,KAJEH,EAIe,UAJMI,cACrBH,EAAcD,EAAeK,MAAM,IAAIC,KAAK,IAC3CN,IAAmBC,G","sources":["src/index.js"],"sourcesContent":["\n\n\n// const makeCounter = () => {\n//     let currentCounter = 0;\n\n//     const getCurrentCount = () => {\n//         return currentCounter;\n//     }\n\n//     const increaseCount = () => {\n//         currentCounter +=1;\n//         return currentCounter;\n//     }\n\n//     const decreaseCount = () => {\n//         currentCounter = currentCounter - 1;\n//         return currentCounter;\n//     }\n\n\n//     return { getCurrentCount, increaseCount, decreaseCount };\n// }\n\n// const counter1 = makeCounter();\n// const counter2 = makeCounter();\n\n\n// // console.log(counter1.getCurrentCount());\n// // console.log(counter1.increaseCount());\n// // console.log(counter1.decreaseCount());\n// // console.log(counter1.getCurrentCount());\n// // console.log(counter2.increaseCount());\n// // console.log(counter2.increaseCount());\n// // console.log(counter2.increaseCount());\n// // console.log(counter1.getCurrentCount());\n\n\n// function show(...args) {\n//     console.log('this:', this);\n//     console.log('args:', args);\n// }\n\n// // show.apply({ name: 'Bob' }, ['here', 'there'])\n// const showThis = show.bind({ name: 'Bob' }, 'here', 'there')\n// // showThis()\n\n// // const lowerCase = s => s.toLowercase();\n// // const addSymbol = s => `${s}`;\n// // const reverseString = s => s.split('').reverse().join('');\n\n// // const compose = (...allFunctions) => arg => {\n// //     return allFunctions.reduce((prevFunc, currentFunc) => currentFunc(prevFunc), arg);\n// // }\n// // const procesString = compose(lowerCase, addSymbol, reverseString);\n// // procesString('acvfds')\n\n// const multiply = (num1, num2) => {\n//     console.log('num1', num1);\n//     console.log('num2', num2);\n//     return num1 * num2\n// };\n// const multiply5 = num2 => {\n//     return multiply(5, num2)\n// };\n// const multiply4 = multiply.bind(null, 4)\n\n// // console.log(multiply5(2));\n// // console.log((multiply4(3)));\n\n\n// const multiplyCurried = (num1, num2) => {\n//     // console.log(num1);\n//     // console.log(num2);\n//     if (arguments.length === 2) {\n//         return num1 * num2;\n//     }\n\n//     return (num3) => multiplyCurried(num1,num3);\n// }\n\n\n// const result = multiplyCurried(3)(5)();\n// // console.log(result);\n\n// const cat = [1, 3, 'dog', 'Poly'];\n// const isDog = el => el === 'dog';\n\n// // console.log(cat.indexOf(3));\n// // console.log(cat.findIndex(el=>el===3));\n\n// // const students = [\n// //     { id: 1, name: 'Alice', age: 22 },\n// //     { id: 2, name: 'Bob', age: 25 },\n// //     { id: 3, name: 'Charlie', age: 20 }\n// // ];\n\n// // const namesArray = students.reduce((newStudentsList, element, index, array) => {\n// //     return [...newStudentsList, element.name ]\n// // }, [])\n\n// // console.log(namesArray);\n\n// // const totalAge = students.reduce((totalNumber, element, index, array )=> {\n// //     totalNumber += element.age;\n// //     return totalNumber;\n// // }, 0);\n\n// // console.log(totalAge);\n\n// // const newArray = students.reduce((newStudentsArray, element, index) => {\n// //     newStudentsArray[element.name] = element;\n// //     return newStudentsArray;\n\n// // }, {})\n\n// // console.log(newArray);\n\n// const note = {};\n// note.name = 'ppp';\n// // console.log(note);\n\n// const students = [\n//     { id: 1, name: 'Alice', age: 22 },\n//     { id: 2, name: 'Bob', age: 25 },\n//     { id: 3, name: 'Charlie', age: 20 }\n// ];\n\n// // students.sort((a, b) => a.age - b.age);\n\n// // students.sort((a, b) => b.name.localeCompare(a.name))\n\n// // const newS = students.slice(0,1)\n// // console.log(newS);\n\n\n// async function fetchPokemonByID() {\n//     return new Promise((resolve, reject) => {\n//         return fetch('https://pokeapi.co/api/v2/item/1/?limit=10&offset=10');\n//     }).catch(e=>reject(e))\n//     }\n\n\n\n// fetchPokemonByID()\n\n// async function newFestch() {\n//     for (let i = 0; i <= 10; i += 1){\n\n//     }\n// }\n\n// // console.log(Array.from('Bob'));\n\n// // console.log([].map.call('somesting', (letter) => letter));\n\n// const multiplyN = (num1, num2) => {\n//     if (num2) {\n//         return num1 * num2;\n//     }\n\n//     return (num3) => num1 * num3;\n\n// }\n\n// console.log(multiplyN(2, 3));\n// console.log(multiplyN(2)(5));\n// const someFunc = multiplyN(2);\n// console.log(someFunc(4));\n\nfunction isPalindrome(str) {\n    const loweredcaseStr = str.toLowerCase();\n    const reversedStr = loweredcaseStr.split('').join('')\n    return loweredcaseStr === reversedStr;\n}\nconsole.log(isPalindrome('racecar'))\n"],"names":["loweredcaseStr","reversedStr","console","log","toLowerCase","split","join"],"version":3,"file":"index.692af798.js.map"}